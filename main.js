// main.js - Fido y Lola van de marcha (disco loop, audio unlock, responsive)
const API_BASE = "https://fidoylola-1.onrender.com/api/scores";
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d',{alpha:false});
const BASE_W = 360, BASE_H = 640;
function resizeCanvas(){ canvas.style.width = Math.min(window.innerWidth,420)+'px'; canvas.style.height = Math.min(window.innerHeight,780)+'px'; canvas.width = BASE_W; canvas.height = BASE_H; }
window.addEventListener('resize', resizeCanvas); resizeCanvas();

let phase='menu', selected='fido', score=0, level=1, lives=3, maxLives=5;
let bags=[], lifeStripes=[], spawnTimer=0;
let audio={}, audioUnlocked=false;
let player={x:BASE_W/2-28,y:BASE_H-180,w:56,h:76};

function loadAudio(){ ['music_loop','pick','hit','powerup','dj_voice'].forEach(k=>{ audio[k]=new Audio('sounds/'+k+'.wav'); audio[k].preload='auto'; if(k==='music_loop'){ audio[k].loop=true; audio[k].volume=0.7; } }); }
function unlockAudio(){ if(audioUnlocked) return; audioUnlocked=true; try{ audio.music_loop.play().catch(()=>{}); }catch(e){} }
async function fetchTop(){ try{ const r=await fetch(API_BASE); const j=await r.json(); return j.scores||[];}catch(e){return [];} }
async function submitScore(name){ try{ const payload={name:name.substring(0,24),score:Math.floor(score),character:selected}; await fetch(API_BASE,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)}); }catch(e){} }
function roundRect(x,y,w,h,r){ ctx.beginPath(); ctx.moveTo(x+r,y); ctx.arcTo(x+w,y,x+w,y+h,r); ctx.arcTo(x+w,y+h,x,y+h,r); ctx.arcTo(x,y+h,x,y,r); ctx.arcTo(x,y,x+w,y,r); ctx.closePath(); }
function drawBackground(){ ctx.clearRect(0,0,BASE_W,BASE_H); const t = Date.now()/400; for(let i=0;i<6;i++){ const x = (i*90 + (t*80)%360) - 80; const g = ctx.createLinearGradient(x,0,x+220,BASE_H); g.addColorStop(0, `rgba(${200+50*Math.sin(t+i)}, ${80+80*Math.cos(t+i)}, ${220+30*Math.sin(t/2+i)}, 0.06)`); g.addColorStop(1, `rgba(${100+40*Math.sin(t+i*1.1)}, ${50+60*Math.cos(t+i)}, ${150+40*Math.sin(t/3+i)}, 0.03)`); ctx.fillStyle = g; ctx.fillRect(x,0,220,BASE_H); } }
function drawMenu(){ drawBackground(); ctx.fillStyle='#fff'; ctx.font='22px sans-serif'; ctx.textAlign='center'; ctx.fillText('ðŸŽ¶ Fido y Lola van de marcha ðŸŽ¶', BASE_W/2, 56); ctx.font='12px monospace'; ctx.fillText('Toca para PLAY', BASE_W/2, BASE_H-48); }
function drawSelect(){ drawBackground(); ctx.fillStyle='#fff'; ctx.font='18px sans-serif'; ctx.textAlign='center'; ctx.fillText('Selecciona personaje',BASE_W/2,48); ctx.fillText('Toca IZQ = Fido  |  DER = Lola',BASE_W/2,120); drawFido(50,140,90,150); drawLola(220,140,90,150); }
function drawHUD(){ for(let i=0;i<lives;i++){ const x=12+i*38; ctx.fillStyle=['#ff8fcf','#7ad1ff','#b98cff','#ffd97a'][i%4]; roundRect(x,8,32,30,6); ctx.fill(); ctx.fillStyle='#fff'; ctx.fillRect(x+26,6,4,12); } ctx.fillStyle='#fff'; ctx.font='12px monospace'; ctx.fillText('PuntuaciÃ³n:'+Math.floor(score),12,56); ctx.fillText('Nivel:'+level,12,72); }
function drawGame(){ drawBackground(); for(const s of lifeStripes){ ctx.fillStyle='rgba(255,255,255,0.95)'; roundRect(s.x,s.y,s.w,s.h,4); ctx.fill(); } for(const b of bags){ ctx.fillStyle='#ff8fcf'; roundRect(b.x,b.y,b.w,b.h,6); ctx.fill(); } const bob = Math.sin(Date.now()/180)*4; ctx.fillStyle = selected==='fido'? '#6b9be6':'#d76fe9'; roundRect(player.x,player.y+bob,player.w,player.h,8); ctx.fill(); ctx.fillStyle='#f4d8bf'; ctx.beginPath(); ctx.arc(player.x+player.w/2, player.y+12+bob, 10,0,Math.PI*2); ctx.fill(); drawHUD(); }
function drawFido(x,y,w,h){ ctx.fillStyle='#6b9be6'; roundRect(x,y+h*0.25,w,h*0.6,8); ctx.fill(); ctx.fillStyle='#f4d8bf'; ctx.beginPath(); ctx.arc(x+w/2,y+18,12,0,Math.PI*2); ctx.fill(); ctx.fillStyle='#2b1e12'; ctx.fillRect(x+w/2-12,y+6,24,6); }
function drawLola(x,y,w,h){ ctx.fillStyle='#000'; roundRect(x,y+h*0.2,w,h*0.22,6); ctx.fill(); ctx.fillStyle='#5478a8'; roundRect(x+6,y+h*0.52,w-12,h*0.28,8); ctx.fill(); ctx.fillStyle='#f4d8bf'; ctx.beginPath(); ctx.arc(x+w/2,y+18,12,0,Math.PI*2); ctx.fill(); ctx.strokeStyle='#f5d86a'; ctx.lineWidth=3; ctx.beginPath(); ctx.arc(x+w/2-6,y+8,6,Math.PI,Math.PI*1.6); ctx.stroke(); ctx.beginPath(); ctx.arc(x+w/2+6,y+8,6,Math.PI*1.1,Math.PI*2); ctx.stroke(); }
function spawnPink(){ const w=30+Math.random()*30; bags.push({x:Math.random()*(BASE_W-w-28)+14,y:-80,w:w,h:w*0.9,vx:(Math.random()-0.5)*0.8,vy:2+Math.random()*1.5}); }
function spawnLifeStripe(){ const w=10+Math.random()*6; lifeStripes.push({x:Math.random()*(BASE_W-w-28)+14,y:-140,w:w,h:120,vy:2.2+Math.random()*0.6,life:800}); }
function update(){ if(phase!=='play') return; spawnTimer++; if(spawnTimer>60){ spawnTimer=0; if(Math.random()<0.12+level*0.01) spawnPink(); if(Math.random()<0.03) spawnLifeStripe(); } for(let i=bags.length-1;i>=0;i--){ const b=bags[i]; b.vy+=0.02+level*0.006; b.x+=b.vx; b.y+=b.vy; if(b.y>BASE_H+120){ score+=Math.max(1,Math.floor(b.w/10)); bags.splice(i,1); } if(b.x<player.x+player.w && b.x+b.w>player.x && b.y<player.y+player.h && b.y+b.h>player.y){ bags.splice(i,1); lives--; try{ audio.hit.play(); }catch(e){} if(lives<=0){ phase='gameover'; onGameOver(); } } } for(let i=lifeStripes.length-1;i>=0;i--){ const s=lifeStripes[i]; s.y+=s.vy; s.life--; if(s.y>BASE_H+120||s.life<=0){ lifeStripes.splice(i,1); continue; } if(s.x<player.x+player.w && s.x+s.w>player.x && s.y<player.y+player.h && s.y+s.h>player.y){ lifeStripes.splice(i,1); if(lives<maxLives){ lives++; try{ audio.powerup.play(); }catch(e){} } } } if(score>level*300) level=Math.floor(score/300)+1; } async function onGameOver(){ const top = await fetchTop(); const enters = (!top||top.length<10)? true : top.some(e=>score>e.score); if(enters){ const name = prompt('Â¡Top10! Escribe tu nombre:','Jugador'); if(name) await submitScore(name); } try{ audio.music_loop.pause(); audio.dj_voice.play(); }catch(e){} showFinalScene(); phase='menu'; } function showFinalScene(){ let t0=performance.now(); const dur=4200; function anim(now){ const dt=now-t0; const alpha=Math.min(1,dt/dur); ctx.clearRect(0,0,BASE_W,BASE_H); ctx.fillStyle=`rgba(0,0,0,${alpha*0.85})`; ctx.fillRect(0,0,BASE_W,BASE_H); const grd=ctx.createLinearGradient(BASE_W*0.6,BASE_H*0.6,BASE_W*0.9,BASE_H*0.1); grd.addColorStop(0,`rgba(255,190,100,${alpha*0.7})`); grd.addColorStop(1,`rgba(255,220,140,${alpha*0.0})`); ctx.fillStyle=grd; ctx.fillRect(0,0,BASE_W,BASE_H); ctx.fillStyle='white'; ctx.font='28px sans-serif'; ctx.textAlign='center'; ctx.fillText('ðŸª© FIN DE LA FIESTA ðŸª©', BASE_W/2, BASE_H/2-20); const walk=Math.min(1,dt/3000); ctx.fillStyle='rgba(0,0,0,0.9)'; ctx.beginPath(); ctx.ellipse(BASE_W/2+walk*120,BASE_H/2+40,40,80,0,0,Math.PI*2); ctx.fill(); if(dt<dur+1200) requestAnimationFrame(anim); else {} } requestAnimationFrame(anim); } let touchStartX=0; canvas.addEventListener('touchstart', e=>{ e.preventDefault(); unlockAudio(); const t=e.touches[0]; const rect=canvas.getBoundingClientRect(); const x=(t.clientX-rect.left)*(canvas.width/rect.width); if(phase==='menu'){ phase='select'; return; } if(phase==='select'){ selected=(x<BASE_W/2)?'fido':'lola'; phase='play'; resetGame(); try{ audio.music_loop.play(); }catch(e){} return; } if(phase==='play'){ if(x<BASE_W/2) player.x-=40; else player.x+=40; if(player.x<0) player.x=0; if(player.x+player.w>BASE_W) player.x=BASE_W-player.w; } touchStartX=t.clientX; }); canvas.addEventListener('touchend', e=>{ const dx=e.changedTouches[0].clientX-touchStartX; if(phase==='play'){ if(dx>30) player.x+=50; else if(dx<-30) player.x-=50; if(player.x<0) player.x=0; if(player.x+player.w>BASE_W) player.x=BASE_W-player.w; } }); function resetGame(){ score=0; level=1; lives=3; bags=[]; lifeStripes=[]; spawnTimer=0; player.x=BASE_W/2-player.w/2; } loadAudio(); function loop(){ update(); if(phase==='menu') drawMenu(); else if(phase==='select') drawSelect(); else if(phase==='play') drawGame(); requestAnimationFrame(loop); } loop();